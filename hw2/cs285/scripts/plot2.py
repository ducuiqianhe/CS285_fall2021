import numpy as np
import matplotlib.pyplot as plt

x = np.arange(0, 100, 1)


# # Q2
# y = [10.560976, 22.3, 25.5, 24.235294, 28.571428, 54.333332, 40.916668, 40.2, 51.25, 60.375, 85.0, 84.0, 51.875, 51.0, 43.6, 40.6, 44.666668, 60.42857, 70.5, 80.0, 84.8, 116.75, 94.2, 70.166664, 145.33333, 103.0, 102.5, 99.2, 93.6, 108.75, 155.0, 136.0, 144.66667, 136.0, 146.66667, 177.0, 133.33333, 152.66667, 122.5, 130.5, 128.25, 101.75, 122.25, 114.0, 112.0, 126.75, 167.33333, 182.0, 167.0, 93.166664, 111.25, 238.0, 217.33333, 277.5, 179.66667, 139.0, 159.0, 125.0, 112.0, 106.5, 99.6, 97.6, 135.33333, 118.0, 167.0, 137.33333, 271.5, 221.0, 216.0, 154.33333, 138.0, 150.66667, 159.0, 149.0, 126.0, 138.25, 163.0, 235.0, 508.5, 575.5, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 169.33333, 319.0,255.66667, 216.33333, 171.66667, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 1000.0, 399.0]

#Q3
y = [-234.24428, -129.98991, -234.2185, -136.96571, -124.93392, -76.143074, -71.27785, -80.06578, -102.47409, -34.291733, 6.7026343, -46.69129, -26.978142, -144.41348, -90.17137, -36.96009, -72.89101, -125.28125, -14.747511, 4.697672, 37.464554, 8.558002, 58.246307, 95.407104, 8.978864, 88.44975, 74.94548, 130.77501, 93.928116, 119.740524, 112.21506, 121.084785, 67.035995, 142.05394, 121.04087, 163.79233, 98.02646, 146.33693, 145.22047, 141.74182, 156.11456, 189.03029, 175.22272, 99.65207, 151.47115, 125.60962, 145.0532, 136.15039, 157.3613, 103.93248, 170.27077, 147.2374, 164.44452, 166.4908, 152.68842, 164.72725, 158.88269, 125.010216, 162.6553, 115.146, 187.17993, 134.68256, 136.3533, 131.94269, 134.22153, 160.76295, 138.26309, 134.9484, 140.46089, 177.32785, 193.9887, 171.61076, 135.64406, 61.036983, 172.15927, 109.051765, 149.6141, 133.7323, 115.14198, 16.830664, 138.50018, 139.11531, 167.95932, 145.39497, 164.12872, 172.69553, 156.97197, 143.1495, 121.0138, 168.68542, 166.8164, 130.92068, 131.9448, 132.7227, 120.30432, 119.97939, 161.77873, 263.20358, 63.393032, 34.64991]


plt.xlabel('num_iter')
plt.ylabel('Eval_AverageReturn')
# plt.plot(x, y, 'b')


# plt.xlabel('n_iter')
# plt.ylabel('performance')
# plt.plot(x, y_ant_train, 'b', x, y_ant_eval, "r")
# plt.bar(x, height=y_ant_loss, width=0.3)

# fig, ax1 = plt.subplots()


# color = 'tab:blue'
# ax1.set_xlabel('n_iter')
# ax1.set_ylabel('mean performance', color=color)

plt.plot(x, y, 'b')
# plt.plot(x, y2, 'r', label="-rtg -dsa")
# plt.plot(x, y3, 'b', label="-rtg")


# ax1.axhline(y=3772, color='r', label="expert mean", linestyle='-')
# ax1.axhline(y=442, color='y', label="behavior cloning", linestyle='-')
# ax1.tick_params(axis='y', labelcolor=color)
# plt.legend(loc="lower right")
#
# ax2 = ax1.twinx()
#
# color = 'tab:red'
# ax2.set_ylabel('eval loss', color=color)  # we already handled the x-label with ax1
# ax2.bar(x, height=y_hopper_loss, width=0.3, color=color)
# ax2.tick_params(axis='y', labelcolor=color)
#
# plt.title("Batch: 5000")
# fig.tight_layout()


# t = np.arange(0., 5., 0.2)
# plt.plot([1, 2, 3, 4], [1, 4, 9, 16], 'r')
#
# plt.bar([1, 2, 3, 4], height=[1, 4, 9, 16], width=0.3)


# plt.plot(t, t, 'b--', t, t**2, 'bs', t, t**3, 'g^')
# plt.ylabel('some numbers')
plt.show()







# # Q1
# y1 = [29.642857, 25.1875, 44.88889, 81.0, 41.0, 47.22222, 53.25, 59.714287, 81.0, 90.6, 161.33333, 158.0, 100.5, 71.833336, 79.833336, 160.66667, 161.33333, 167.0, 134.33333, 71.333336, 121.0, 103.75, 111.5, 82.8, 82.0, 108.25, 115.25, 83.5, 73.166664, 86.6, 116.25, 117.25, 93.6, 110.0, 112.75, 93.0, 139.0, 78.666664, 148.0, 104.5, 112.0, 57.714287, 100.6, 68.333336, 186.66667, 172.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 140.0, 200.0, 200.0, 200.0, 200.0, 200.0, 152.66667, 200.0, 200.0, 104.8, 200.0, 144.0, 200.0, 89.6, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0]
#
# y2 = [32.307693, 41.1, 60.285713, 50.666668, 72.666664, 75.0, 73.0, 68.5, 67.333336, 97.6, 83.0, 173.66667, 144.33333, 137.0, 147.0, 200.0, 200.0, 182.33333, 200.0, 200.0, 185.33333, 127.25, 141.33333, 138.33333, 112.75, 127.25, 141.33333, 139.0, 188.33333, 184.33333, 188.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 106.6, 106.6, 37.18182, 42.3, 46.11111, 59.57143, 69.166664, 69.666664, 71.166664, 103.0, 109.25, 112.5, 118.5, 147.33333, 127.25, 151.33333, 200.0, 181.0, 200.0, 182.0, 200.0, 200.0, 200.0, 167.66667, 154.66667, 173.33333, 169.33333, 180.33333, 182.0, 191.33333, 200.0, 200.0,200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 197.66667, 193.33333, 200.0, 175.66667, 171.0, 174.66667, 178.0, 185.66667, 177.33333]
#
# y3 = [32.307693, 36.454544, 51.5, 46.333332, 68.666664, 89.6, 81.0, 91.0, 86.8, 106.5, 148.33333, 125.5, 171.66667, 136.66667, 129.25, 138.66667, 155.66667, 150.33333, 161.33333, 144.75, 158.66667, 119.5, 112.4, 125.0, 165.0, 121.0, 162.0, 148.0, 133.33333, 177.0, 192.33333, 189.33333, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0,200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 195.66667, 174.0, 156.0, 137.66667, 130.0, 117.75, 114.75, 117.5, 117.25, 108.25, 112.0, 117.25]

# y1 = [46.555557, 40.0, 52.666668, 47.555557, 51.5, 75.85714, 71.833336, 64.85714, 88.166664, 69.166664, 156.66667, 139.66667, 135.66667, 165.0, 145.0, 179.0, 147.66667, 138.0, 139.0, 108.25, 140.66667, 115.75, 115.5, 100.8, 106.25, 89.2, 100.75, 154.66667, 110.25, 107.0, 129.5, 123.25, 117.25, 139.0, 128.5, 152.33333, 200.0, 156.66667, 135.66667, 164.66667, 178.66667, 200.0, 191.33333, 200.0, 176.33333, 200.0, 175.66667, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 189.66667, 200.0, 185.66667, 200.0, 200.0, 179.33333, 196.0, 168.66667, 187.0, 200.0, 194.0, 196.33333, 161.0, 132.0, 147.33333, 103.5, 98.6, 107.25, 104.5, 108.0, 117.0, 113.5, 121.0, 122.0, 124.0,126.0, 130.5, 133.0, 135.66667, 173.66667, 200.0, 194.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0]
#
# y2 = [35.846153, 50.25, 49.22222, 72.166664, 57.142857, 78.0, 85.4, 112.0, 166.66667, 200.0, 200.0, 190.33333, 187.66667, 200.0, 200.0, 200.0, 193.66667, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 161.0, 154.33333, 200.0, 165.0, 200.0, 200.0, 179.66667, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 189.66667, 200.0, 200.0, 141.33333, 200.0, 200.0, 142.33333, 194.33333, 198.33333, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0]
#
# y3 = [32.846153, 36.333332, 59.57143, 63.57143, 72.166664, 168.0, 125.75, 149.75, 167.0, 142.33333, 192.33333, 174.33333, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 195.33333, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0,
#  200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 195.66667, 192.0, 195.33333, 189.66667, 195.0, 200.0, 200.0, 184.0, 175.33333
# , 165.0, 182.0, 179.66667, 194.0, 199.66667, 195.33333, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 122.5, 177.33333, 173.0, 196.66667, 200.0,
# 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0]